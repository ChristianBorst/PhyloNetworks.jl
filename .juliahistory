open (~/Projects/CFnetworks/scratch_work/building_graphs.jl)
include("functions.jl")
include("types.jl")
n1=Node()
include("scratch_work/building_graphs.jl")
include("scratch_work/building_graphs.jl")
include("scratch_work/building_graphs.jl")
include("scratch_work/building_graphs.jl")
include("scratch_work/building_graphs.jl")
include("examples/tree_example.jl")
include("functions.jl")
include("types.jl)
include("functions.jl")
include("types.jl")
include ("functions.jl")
include("scratch_work/building_graphs.jl")
include("scratch_work/building_graphs.jl")
include ("examples/tree_example.jl")
include("scratch_work/building_graphs.jl")
net
include("types.jl")
include("functions.jl")
include("scratch_work/graph_sandbox.jl")
include("scratch_work/graph_sandbox.jl")
include("scratch_work/graph_sandbox.jl")
include("scratch_work/graph_sandbox.jl")
net.numNodes
 net.node
> net.leaf
net.leaf
4+4
include("scratch_work/graph_sandbox.jl")
for i in net.lead println(2)
include("types.jl")
include("functions.jl")
include("scratch_work/graph_sandbox.jl")
net
include("visualization/CF_to_LG.jl")
include("visualization/CF_to_LG.jl")
include("visualization/CF_to_LG.jl")
 include("visualization/CF_to_LG.jl")
 include("visualization/CF_to_LG.jl")
include("visualization/CF_to_LG.jl")
include("visualization/CF_to_LG.jl")
sng="Walking the "*"dog."
println(sng)
include("visualization/CF_to_LG.jl")
include("visualization/CF_to_LG.jl")
include("visualization/CF_to_LG.jl")
net
include("visualization/CF_to_LG.jl")
include("visualization/CF_to_LG.jl")
println("CF network created")

println("CF network created")

include("visualization/CF_to_LG.jl")
include("visualization/CF_to_LG.jl")
include("visualization/CF_to_LG.jl")
include("visualization/CF_to_LG.jl")
include("visualization/CF_to_LG.jl")
include("visualization/CF_to_LG.jl")
include("visualization/CF_to_LG.jl")
include("visualization/CF_to_LG.jl")
include("visualization/CF_to_LG.jl")
include("visualization/CF_to_LG.jl")
include("types.jl")
include("functions.jl")
inlcude("scratch_work/test_graphs.jl")
include("scratch_work/test_graphs.jl")
g1=create_g1()
show(g1)
g1.nodes
g1.Nodes()
g1.node()
g1.node
include("scratch_work/test_graphs.jl")
g1=create_g1()
include("scratch_work/test_graphs.jl")
g1=create_g1()
g1
g1 = create_g1()
g1 = create_g1()
g1
show(g1)
include("scratch_work/test_graphs.jl")
g1 = create_g1()
g1
include("visualization/CF_to_LG.jl")
using LightGraphs
include("visualization/CF_to_LG.jl")
include("visualization/CF_to_LG.jl")
include("visualization/CF_to_LG.jl")
g1
CF_to_Light_Graph(g1)
using Base.Graphics
using Cairo
Pkg.add("Cairo")
Pkg.update("Cairo")
Pkg.Update("Cairo")
Pkg.update()
Pkg.add("TikzPictures")
using TikzPictures
Pkg.add("Tk")
using Tk
Pkg.add("GR")
using GR
Pkg.add("GR")
using GR
Pkg.add("GR")
using GR
using Cairo
using Tk
win = Toplevel("Test", 400, 200)
c = Canvas(win)
pack(c, expand=true, fill="both")
ctx = getgc(c)
function set_coords(ctx::GraphicsContext, x, y, w, h, l, r, t, b)
include("types.jl")
include("functions.jl")
include("scratch_work/Misc/test_graphs.jl")
g3 = create_g3()
include("scratch_work/Misc/test_graphs.jl")
g3 = create_g3()
g3.Node
g3.node
g3.numNodes
g3.edge
for i in g3.edge println("1")
for i in g3.edge println("1")
include("startupscript.jl")
include("visualization/draw.jl")
include("scratch_work/Misc/test_graphs.jl")
g3 = create_g3()
g3.number
g3.root
drawCF(g3)
drawCF(g3,drawgraph"
 include("startupscript.jl")
include("scratch_work/Misc/test_graphs.jl")
g3 = create_g3();
include("visualization/draw.jl")
include("visualization/dotexport.jl")
include("visualization/draw.jl")
drawCF(g3)
include("visualization/draw")
include("visualization/draw.jl")
drawCF(g3)
include("visualization/draw.jl")
drawCF(g3)
include("visualization/draw.jl")
drawCF(g3)
include("visualization/draw.jl")
drawCF(g3)
include("visualization/draw.jl")
drawCF(g3)
include("visualization/draw.jl")
drawCF(g3)
include("visualization/draw.jl")
drawCF(g3)
include("visualization/draw.jl")
drawCF(g3)
drawCF(g3)
g3.edge
include("hybridtest.jl")
include("visualization/draw.jl")
drawCF(g3)
include("scratch_work/Misc/test_graphs.jl")
g3 = create_g3()
drawCF(g3)
include("visualization/draw.jl")
drawCF(g3)
include("visualization/draw.jl")
drawCF(g3)
include("visualization/draw.jl")
drawCF(g3)
include("visualization/draw.jl")
drawCF(g3)
include("visualization/draw.jl")
drawCF(g3)
include("visualization/draw.jl")
drawCF(g3)
include("visualization/draw.jl")
drawCF(g3)
include("visualization/draw.jl")
drawCF(g3)
include("visualization/draw.jl")
drawCF(g3)
include("visualization/draw.jl")
drawCF(g3)
include("visualization/draw.jl")
drawCF(g3)
include("visualization/draw.jl")
drawCF(g3)
include("visualization/draw.jl")
drawCF(g3)
include("visualization/draw.jl")
drawCF(g3)
include("visualization/draw.jl")
drawCF(g3)
include("visualization/draw.jl")
drawCF(g3)
include("visualization/draw.jl")
drawCF(g3)
include("visualization/draw.jl")
drawCF(g3)
include("visualization/draw.jl")
drawCF(g3)
include("visualization/draw.jl")
include("visualization/draw.jl")
drawCF(g3)
include("visualization/draw.jl")
drawCF(g3)
include("visualization/draw.jl")
drawCF(g3)
include("visualization/draw.jl")
drawCF(g3)
include("visualization/draw.jl")
drawCF(g3)
quit()
include("startupscript.jl")
g = create_g3();
(g.node)[1]
n1 = (g.node)[1]
n2 = (g.node)[2]
n2.edge
true = true
true
true;
a = true
if a = true pass
if a == true pass
include("startupscript.jl")
g3 = create_g3()
include("startupscript.jl")
g3 = create_g3();
drawCF(g3)
drawCF(g3, mainTree = true, imageName = "treeImage")
include(
5
include("startupscript.jl")
g3 = create_g3();
drawCF(g3)
include("visualization/draw.jl")
drawCF(g3)
include("visualization/draw.jl")
drawCF(g3)
include("visualization/draw.jl")
drawCF(g3)
include("visualization/draw.jl")
drawCF(g3)
include("visualization/draw.jl")
drawCF(g3)
include("visualization/draw.jl")
drawCF(g3)
include("visualization/draw.jl")
drawCF(g3)
include("visualization/netTraversal.jl")
root=g3.root
traverseEdges(g3,root)
traverseEdges(g3,root)
quit()
include("startupscript.jl")
g3 = create_g3();
include("visualization/draw.jl")
plotNet(g3)
include("visualization/draw.jl")
include("visualization/draw.jl")
plotNet(g3)
plotNet(g3,width=10)
plotNet(plotNet(g3,width=8.5)
include("startupscript.jl")
include("visualization/netTraversal.jl")
include("visualization/netTraversal.jl")
include("visualization/netTraversal.jl")
help(traverseEdges)
g = create_g3();
root = (g.node)[1]
>
include("visualization/netTraversal.jl")
include("visualization/netTraversal.jl")
traverseEdges(g,root)
include("visualization/netTraversal.jl")
traverseEdges(g,root)
include("visualization/netTraversal.jl"_
include("startupscript.jl")
g = create_g3();
include("visualization/traverseEdges.jl")
quit()
include("startupscript.jl")
g3 = create_g3();
include("visualization/dotexport.jl")
include(
include("startupscript.jl")
net = create_g3();
include("visualization/dotexport.jl")
include("visualization/drawTraversal.jl")
include("visualization/finalDraw.jl")
include("visualization/finalDraw.jl")
quit()
include("startupscript.jl")
include("visualization/dotexport.jl")
include("visualization/drawTraversal.jl")
include("visualization/finalDraw.jl")
net=create_g3();
plotNet(g3)
plotNet(net)
include("visualization/drawTraversal.jl")
include("visualization/finalDraw.jl")
plotNet(net)
include("visualization/drawTraversal.jl")
include("visualization/finalDraw.jl")
plotNet(net)
include("visualization/drawTraversal.jl")
include("visualization/finalDraw.jl")
plotNet(net)
include("visualization/drawTraversal.jl")
include("visualization/finalDraw.jl")
plotNet(net)
include("visualization/finalDraw.jl")
plotNet(net)
include("visualization/finalDraw.jl")
plotNet(net)
plotNet("visualization/finalDraw.jl")
include("visualization/finalDraw.jl")
plotNet(net,verticalHeirarchy=false)
plotNet(net)
include("visualization/drawTraversal.jl")
include("visualization/finalDraw.jl")
plotNet(net)
include("visualization/drawTraversal.jl")
include("visualization/finalDraw.jl")
plotNet(net)
plotNet(net,verticalHeirarchy=false)
include("visualization/drawTraversal.jl")
include("visualization/finalDraw.jl")
plotNet(net)
quit()
include("startupscript.jl")
net=create_g3();
include("visualization/dotexport.jl")
include("visualization/drawTraversal.jl")
include("visualization/finalDraw.jl")
plotNet(net)
plotNet(net)
include("visualization/drawTraversal.jl")
include("visualization/finalDraw.jl")
plotNet(net)
include("visualization/finalDraw.jl")
plotNet(net)
include("visualization/finalDraw.jl")
plotNet(net)
include("visualization/finalDraw.jl")
plotNet(net)
plotNet(net,verticalHeirarchy=false)
include("visualization/drawTraversal.jl")
include("visualization/finalDraw.jl")
plotNet(net)
plotNet(net,vert=false)
include("visualization/drawTraversal.jl")
include("visualization/finalDraw.jl")
plotNet(net)
include("visualization/drawTraversal.jl")
include("visualization/finalDraw.jl")
plotNet(net,mainTree=true)
include("visualization/drawTraversal.jl")
include("visualization/finalDraw.jl")
plotNet(net,mainTree=true)
quit()
include("startupscript.jl")
include("visualization/dotexport.jl")
include("visualization/drawTraversal.jl")
include("visualization/finalDraw.jl")
net = create_g3();
plotNet(net)
include("visualization/finalDraw.jl")
plotNet(net)
include("visualization/finalDraw.jl")
plotNet(net)
include("visualization/finalDraw.jl")
plotNet(net)
include("visualization/finalDraw.jl")
plotNet(net)
include("visualization/finalDraw.jl")
include("visualization/finalDraw.jl")
plotNet(net)
include("visualization/finalDraw.jl")
plotNet(net)
plotNet("((((6)#H1,4:1.5):0.2,7:0.2):0.1,8:0.1,(#H1,10));")
quit()
include("startupscript.jl")
include("visualization/dotexport.jl")
include("visualization/drawTraversal.jl")
include("visualization/finalDraw.jl")
g3 = create_g3();
g4 = create_g4();
plotNet(g3)
plotNet(g4)
plotNet(g4, mainTree=true, width = 10, height = 10, vert = false, internalLabels = true, fontsize = 10.0)
plotNet(g4, mainTree=true, width = 10, height = 10, vert = false, internalLabels = true, fontSize = 10.0)
include("examples/case_j_example.jl")
include("startupscript.jl")
g3 = create_g3();
g4 = create_g4();
include("visualization/dotexport.jl")
include("visualization/drawTraversal.jl")
include("visualization/finalDraw.jl")
plotNet(g4)
plotNet("(((((A,#H1),((B)#H1,C)),(D)#H2),(#H2,E)),F);")
testNet = "(((((A,#H1),((B)#H1,C)),(D)#H2),(#H2,E)),F);"
plotNet(testNet)
plotNet(testNet, mainTree = true)
plotNet(testNet, vert = false)
plotNet(testNet)
testNet1= readTopologyUpdate("(((((A,#H1),((B)#H1,C)),(D)#H2),(#H2,E)),F);")
cNet = readTopologyUpdate("(((((A,#H1),((B)#H1,C)),(D)#H2),(#H2,E)),F);");
plotNet(cNet)
plotNet(cNet,vert=false)
plotNet(cNet, mainTree = true)
cNet2 = readTopologyUpdate("(6,(((4)#H1,((3)#H2,(1,(2,#H2)))),(5,#H1)));");
plotNet(cNet2)
cNet3 = readTopologyUpdate("(6,((((1,(2,#H7:0.20895374379475928):9.539222964752105):0.4607656100128087,(3)#H7:0.31559535366309927):1.0361456611504707,(4)#H9:0.24036660747358823):2.280812502854653,(5,#H9:0.0):1.591527116515058):0.5);");
plotNet(cNet3)
cNet1.root
cNet.root
plotNet(g3)
plotNet(g4)
plotNet(cNet)
plotNet(cNet2)
plotNet(cNet3)
plotNet(cNet,mainTree=true,width=10.0,height=10.0,fontSize=12.0,internalLabels=true,vert=false)
plotNet(g3)
plotNet(cNet)
plotNet(cNet,internalLabels=true)
plotNet(cNet3)
plotNet(cNet, mainTree =true, vert = false, fontSize=10.0, width =10.0, height =10.0)
include("visualization/netTraversal.jl")
cNet.node
include("startupscript.jl")
include("visualization/dotexport.jl")
include("visualization/drawTraversal.jl")
include("visualization/finalDraw.jl")
net = readTopologyUpdate("(6,(((4)#H1,((3)#H2,(1,(2,#H2)))),(5,#H1)));");
plotNet(net,internalLabels=true)
printNodes(net)
net.names
net.node[1].number
net.node[1].name
net.node[3].number
net.node[3].name
net.node[12].number
net.node[12].name
plotNet(net,internalLabels=true)
plotNet(net,mainTree=true)
include("visualization/drawTraversal.jl")
quit()
include("startupscript.jl")
include("visualization/dotexport.jl")
include("visualization/drawTraversal.jl")
include("visualization/finalDraw.jl")
net = readTopologyUpdate("(((((1,#H1),((2)#H1,3)),(4)#H2),(#H2,5)),6);");
plotNet(net, internalLabels = true)
net2 = readTopologyUpdate("(6,(((4)#H1,((3)#H2,(1,(2,#H2)))),(5,#H1)));");
plotNet(net2, internalLabels = true)
net3 = readTopologyUpdate("(6,((((1,(2,#H7:0.20895374379475928):9.539222964752105):0.4607656100128087,(3)#H7:0.31559535366309927):1.0361456611504707,(4)#H9:0.24036660747358823):2.280812502854653,(5,#H9:0.0):1.591527116515058):0.5);");
plotNet(net3, internalLabels=true)
plotNet(net, vert=false)
quit()
