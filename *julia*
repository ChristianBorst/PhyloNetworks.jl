               _
   _       _ _(_)_     |  A fresh approach to technical computing
  (_)     | (_) (_)    |  Documentation: http://docs.julialang.org
   _ _   _| |_  __ _   |  Type "help()" for help.
  | | | | | | |/ _' |  |
  | | |_| | | | (_| |  |  Version 0.3.9 (2015-05-30 11:24 UTC)
 _/ |\__'_|_|_|\__'_|  |  Official http://julialang.org/ release
|__/                   |  x86_64-apple-darwin13.4.0

WARNING: Terminal not fully functional
julia> 
julia> net
ERROR: net not defined

julia> include("types.jl")

julia> include("functions.jl")
logPseudoLik (generic function with 3 methods)

julia> include("scratch_work/graph_sandbox.jl")
ERROR: n5 not defined
 in include at /Applications/Julia-0.3.9.app/Contents/Resources/julia/lib/julia/sys.dylib
 in include_from_node1 at /Applications/Julia-0.3.9.app/Contents/Resources/julia/lib/julia/sys.dylib
while loading /Users/John_Spaw/Projects/CFnetworks/scratch_work/graph_sandbox.jl, in expression starting on line 21

julia> include("scratch_work/graph_sandbox.jl")
Node	In Cycle	isHybrid	hasHybEdge	Edges numbers
1	-1		false	false		1	2
2	-1		false	false		1
3	-1		false	false		2	3
4	-1		false	false		3
Edge	Node1	Node2	InCycle	containRoot	istIdentitiable	Length	isHybrid	Gamma
1	1	2	-1	true		false		1.0	false	1.0
2	1	3	-1	true		true		1.0	false	1.0
3	3	4	-1	true		false		1.0	false	1.0

julia> include("scratch_work/graph_sandbox.jl")
Node	In Cycle	isHybrid	hasHybEdge	Edges numbers
1	-1		false	false		1	2
2	-1		false	false		1
3	-1		false	false		2	3
4	-1		false	false		3
Edge	Node1	Node2	InCycle	containRoot	istIdentitiable	Length	isHybrid	Gamma
1	1	2	-1	true		false		5.0	false	1.0
2	1	3	-1	true		true		1.0	false	1.0
3	3	4	-1	true		false		7.0	false	1.0

julia> include("scratch_work/graph_sandbox.jl")
Node	In Cycle	isHybrid	hasHybEdge	Edges numbers
1	-1		false	false		1	2
2	-1		false	false		1
3	-1		false	false		2	3
4	-1		false	false		3
Edge	Node1	Node2	InCycle	containRoot	istIdentitiable	Length	isHybrid	Gamma
1	1	2	-1	true		false		5.0	false	1.0
2	1	3	-1	true		true		1.0	false	1.0
3	3	4	-1	true		false		7.0	false	1.0

julia> net.numNodes
4

julia> net.node
4-element Array{Node,1}:
 Node(1,false,false,-1.0,[Edge(1,5.0,false,0.006737946999085467,0.9932620530009145,1.0,ANode[Node(#= circular reference =#),Node(2,true,false,-1.0,[Edge(#= circular reference =#)],false,false,false,false,false,false,-1,nothing,-1,-1,"")],true,true,-1,true,false,false),Edge(2,1.0,false,0.36787944117144233,0.6321205588285577,1.0,ANode[Node(#= circular reference =#),Node(3,false,false,-1.0,[Edge(#= circular reference =#),Edge(3,7.0,false,0.0009118819655545162,0.9990881180344455,1.0,ANode[Node(#= circular reference =#),Node(4,true,false,-1.0,[Edge(#= circular reference =#)],false,false,false,false,false,false,-1,nothing,-1,-1,"")],true,true,-1,true,false,false)],false,false,false,false,false,false,-1,nothing,-1,-1,"")],true,true,-1,true,true,false)],false,false,false,false,false,false,-1,nothing,-1,-1,"")
 Node(2,true,false,-1.0,[Edge(1,5.0,false,0.006737946999085467,0.9932620530009145,1.0,ANode[Node(1,false,false,-1.0,[Edge(#= circular reference =#),Edge(2,1.0,false,0.36787944117144233,0.6321205588285577,1.0,ANode[Node(#= circular reference =#),Node(3,false,false,-1.0,[Edge(#= circular reference =#),Edge(3,7.0,false,0.0009118819655545162,0.9990881180344455,1.0,ANode[Node(#= circular reference =#),Node(4,true,false,-1.0,[Edge(#= circular reference =#)],false,false,false,false,false,false,-1,nothing,-1,-1,"")],true,true,-1,true,false,false)],false,false,false,false,false,false,-1,nothing,-1,-1,"")],true,true,-1,true,true,false)],false,false,false,false,false,false,-1,nothing,-1,-1,""),Node(#= circular reference =#)],true,true,-1,true,false,false)],false,false,false,false,false,false,-1,nothing,-1,-1,"")
 Node(3,false,false,-1.0,[Edge(2,1.0,false,0.36787944117144233,0.6321205588285577,1.0,ANode[Node(1,false,false,-1.0,[Edge(1,5.0,false,0.006737946999085467,0.9932620530009145,1.0,ANode[Node(#= circular reference =#),Node(2,true,false,-1.0,[Edge(#= circular reference =#)],false,false,false,false,false,false,-1,nothing,-1,-1,"")],true,true,-1,true,false,false),Edge(#= circular reference =#)],false,false,false,false,false,false,-1,nothing,-1,-1,""),Node(#= circular reference =#)],true,true,-1,true,true,false),Edge(3,7.0,false,0.0009118819655545162,0.9990881180344455,1.0,ANode[Node(#= circular reference =#),Node(4,true,false,-1.0,[Edge(#= circular reference =#)],false,false,false,false,false,false,-1,nothing,-1,-1,"")],true,true,-1,true,false,false)],false,false,false,false,false,false,-1,nothing,-1,-1,"")
 Node(4,true,false,-1.0,[Edge(3,7.0,false,0.0009118819655545162,0.9990881180344455,1.0,ANode[Node(3,false,false,-1.0,[Edge(2,1.0,false,0.36787944117144233,0.6321205588285577,1.0,ANode[Node(1,false,false,-1.0,[Edge(1,5.0,false,0.006737946999085467,0.9932620530009145,1.0,ANode[Node(#= circular reference =#),Node(2,true,false,-1.0,[Edge(#= circular reference =#)],false,false,false,false,false,false,-1,nothing,-1,-1,"")],true,true,-1,true,false,false),Edge(#= circular reference =#)],false,false,false,false,false,false,-1,nothing,-1,-1,""),Node(#= circular reference =#)],true,true,-1,true,true,false),Edge(#= circular reference =#)],false,false,false,false,false,false,-1,nothing,-1,-1,""),Node(#= circular reference =#)],true,true,-1,true,false,false)],false,false,false,false,false,false,-1,nothing,-1,-1,"")

julia> net.leaf
ERROR: syntax: extra token "net" after end of expression

julia> net.leaf
2-element Array{Node,1}:
 Node(2,true,false,-1.0,[Edge(1,5.0,false,0.006737946999085467,0.9932620530009145,1.0,ANode[Node(1,false,false,-1.0,[Edge(#= circular reference =#),Edge(2,1.0,false,0.36787944117144233,0.6321205588285577,1.0,ANode[Node(#= circular reference =#),Node(3,false,false,-1.0,[Edge(#= circular reference =#),Edge(3,7.0,false,0.0009118819655545162,0.9990881180344455,1.0,ANode[Node(#= circular reference =#),Node(4,true,false,-1.0,[Edge(#= circular reference =#)],false,false,false,false,false,false,-1,nothing,-1,-1,"")],true,true,-1,true,false,false)],false,false,false,false,false,false,-1,nothing,-1,-1,"")],true,true,-1,true,true,false)],false,false,false,false,false,false,-1,nothing,-1,-1,""),Node(#= circular reference =#)],true,true,-1,true,false,false)],false,false,false,false,false,false,-1,nothing,-1,-1,"")
 Node(4,true,false,-1.0,[Edge(3,7.0,false,0.0009118819655545162,0.9990881180344455,1.0,ANode[Node(3,false,false,-1.0,[Edge(2,1.0,false,0.36787944117144233,0.6321205588285577,1.0,ANode[Node(1,false,false,-1.0,[Edge(1,5.0,false,0.006737946999085467,0.9932620530009145,1.0,ANode[Node(#= circular reference =#),Node(2,true,false,-1.0,[Edge(#= circular reference =#)],false,false,false,false,false,false,-1,nothing,-1,-1,"")],true,true,-1,true,false,false),Edge(#= circular reference =#)],false,false,false,false,false,false,-1,nothing,-1,-1,""),Node(#= circular reference =#)],true,true,-1,true,true,false),Edge(#= circular reference =#)],false,false,false,false,false,false,-1,nothing,-1,-1,""),Node(#= circular reference =#)],true,true,-1,true,false,false)],false,false,false,false,false,false,-1,nothing,-1,-1,"")

julia> 4+4
8

julia> include("scratch_work/graph_sandbox.jl")
Node	In Cycle	isHybrid	hasHybEdge	Edges numbers
1	-1		false	false		1	2
2	-1		false	false		1
3	-1		false	false		2	3
4	-1		false	false		3
Edge	Node1	Node2	InCycle	containRoot	istIdentitiable	Length	isHybrid	Gamma
1	1	2	-1	true		false		5.0	false	1.0
2	1	3	-1	true		true		1.0	false	1.0
3	3	4	-1	true		false		7.0	false	1.0

julia> for i in net.lead println(2)
  <menu-bar> <signals> <stop>  <menu-bar> <signals> <break>^C



Process julia finished at Mon Jun  8 17:05:08 2015
               _
   _       _ _(_)_     |  A fresh approach to technical computing
  (_)     | (_) (_)    |  Documentation: http://docs.julialang.org
   _ _   _| |_  __ _   |  Type "help()" for help.
  | | | | | | |/ _' |  |
  | | |_| | | | (_| |  |  Version 0.3.9 (2015-05-30 11:24 UTC)
 _/ |\__'_|_|_|\__'_|  |  Official http://julialang.org/ release
|__/                   |  x86_64-apple-darwin13.4.0

WARNING: Terminal not fully functional
julia> 
julia> include("types.jl")

julia> include("functions.jl")
logPseudoLik (generic function with 3 methods)

julia> include("scratch_work/graph_sandbox.jl")
Node	In Cycle	isHybrid	hasHybEdge	Edges numbers
1	-1		false	false		1	2
2	-1		false	false		1
3	-1		false	false		2	3
4	-1		false	false		3
Edge	Node1	Node2	InCycle	containRoot	istIdentitiable	Length	isHybrid	Gamma
1	1	2	-1	true		false		5.0	false	1.0
2	1	3	-1	true		true		1.0	false	1.0
3	3	4	-1	true		false		7.0	false	1.0

julia> net
HybridNetwork(2,4,3,[Node(1,false,false,-1.0,[Edge(1,5.0,false,0.006737946999085467,0.9932620530009145,1.0,ANode[Node(#= circular reference =#),Node(2,true,false,-1.0,[Edge(#= circular reference =#)],false,false,false,false,false,false,-1,nothing,-1,-1,"")],true,true,-1,true,false,false),Edge(2,1.0,false,0.36787944117144233,0.6321205588285577,1.0,ANode[Node(#= circular reference =#),Node(3,false,false,-1.0,[Edge(#= circular reference =#),Edge(3,7.0,false,0.0009118819655545162,0.9990881180344455,1.0,ANode[Node(#= circular reference =#),Node(4,true,false,-1.0,[Edge(#= circular reference =#)],false,false,false,false,false,false,-1,nothing,-1,-1,"")],true,true,-1,true,false,false)],false,false,false,false,false,false,-1,nothing,-1,-1,"")],true,true,-1,true,true,false)],false,false,false,false,false,false,-1,nothing,-1,-1,""),Node(2,true,false,-1.0,[Edge(1,5.0,false,0.006737946999085467,0.9932620530009145,1.0,ANode[Node(1,false,false,-1.0,[Edge(#= circular reference =#),Edge(2,1.0,false,0.36787944117144233,0.6321205588285577,1.0,ANode[Node(#= circular reference =#),Node(3,false,false,-1.0,[Edge(#= circular reference =#),Edge(3,7.0,false,0.0009118819655545162,0.9990881180344455,1.0,ANode[Node(#= circular reference =#),Node(4,true,false,-1.0,[Edge(#= circular reference =#)],false,false,false,false,false,false,-1,nothing,-1,-1,"")],true,true,-1,true,false,false)],false,false,false,false,false,false,-1,nothing,-1,-1,"")],true,true,-1,true,true,false)],false,false,false,false,false,false,-1,nothing,-1,-1,""),Node(#= circular reference =#)],true,true,-1,true,false,false)],false,false,false,false,false,false,-1,nothing,-1,-1,""),Node(3,false,false,-1.0,[Edge(2,1.0,false,0.36787944117144233,0.6321205588285577,1.0,ANode[Node(1,false,false,-1.0,[Edge(1,5.0,false,0.006737946999085467,0.9932620530009145,1.0,ANode[Node(#= circular reference =#),Node(2,true,false,-1.0,[Edge(#= circular reference =#)],false,false,false,false,false,false,-1,nothing,-1,-1,"")],true,true,-1,true,false,false),Edge(#= circular reference =#)],false,false,false,false,false,false,-1,nothing,-1,-1,""),Node(#= circular reference =#)],true,true,-1,true,true,false),Edge(3,7.0,false,0.0009118819655545162,0.9990881180344455,1.0,ANode[Node(#= circular reference =#),Node(4,true,false,-1.0,[Edge(#= circular reference =#)],false,false,false,false,false,false,-1,nothing,-1,-1,"")],true,true,-1,true,false,false)],false,false,false,false,false,false,-1,nothing,-1,-1,""),Node(4,true,false,-1.0,[Edge(3,7.0,false,0.0009118819655545162,0.9990881180344455,1.0,ANode[Node(3,false,false,-1.0,[Edge(2,1.0,false,0.36787944117144233,0.6321205588285577,1.0,ANode[Node(1,false,false,-1.0,[Edge(1,5.0,false,0.006737946999085467,0.9932620530009145,1.0,ANode[Node(#= circular reference =#),Node(2,true,false,-1.0,[Edge(#= circular reference =#)],false,false,false,false,false,false,-1,nothing,-1,-1,"")],true,true,-1,true,false,false),Edge(#= circular reference =#)],false,false,false,false,false,false,-1,nothing,-1,-1,""),Node(#= circular reference =#)],true,true,-1,true,true,false),Edge(#= circular reference =#)],false,false,false,false,false,false,-1,nothing,-1,-1,""),Node(#= circular reference =#)],true,true,-1,true,false,false)],false,false,false,false,false,false,-1,nothing,-1,-1,"")],[Edge(1,5.0,false,0.006737946999085467,0.9932620530009145,1.0,ANode[Node(1,false,false,-1.0,[Edge(#= circular reference =#),Edge(2,1.0,false,0.36787944117144233,0.6321205588285577,1.0,ANode[Node(#= circular reference =#),Node(3,false,false,-1.0,[Edge(#= circular reference =#),Edge(3,7.0,false,0.0009118819655545162,0.9990881180344455,1.0,ANode[Node(#= circular reference =#),Node(4,true,false,-1.0,[Edge(#= circular reference =#)],false,false,false,false,false,false,-1,nothing,-1,-1,"")],true,true,-1,true,false,false)],false,false,false,false,false,false,-1,nothing,-1,-1,"")],true,true,-1,true,true,false)],false,false,false,false,false,false,-1,nothing,-1,-1,""),Node(2,true,false,-1.0,[Edge(#= circular reference =#)],false,false,false,false,false,false,-1,nothing,-1,-1,"")],true,true,-1,true,false,false),Edge(2,1.0,false,0.36787944117144233,0.6321205588285577,1.0,ANode[Node(1,false,false,-1.0,[Edge(1,5.0,false,0.006737946999085467,0.9932620530009145,1.0,ANode[Node(#= circular reference =#),Node(2,true,false,-1.0,[Edge(#= circular reference =#)],false,false,false,false,false,false,-1,nothing,-1,-1,"")],true,true,-1,true,false,false),Edge(#= circular reference =#)],false,false,false,false,false,false,-1,nothing,-1,-1,""),Node(3,false,false,-1.0,[Edge(#= circular reference =#),Edge(3,7.0,false,0.0009118819655545162,0.9990881180344455,1.0,ANode[Node(#= circular reference =#),Node(4,true,false,-1.0,[Edge(#= circular reference =#)],false,false,false,false,false,false,-1,nothing,-1,-1,"")],true,true,-1,true,false,false)],false,false,false,false,false,false,-1,nothing,-1,-1,"")],true,true,-1,true,true,false),Edge(3,7.0,false,0.0009118819655545162,0.9990881180344455,1.0,ANode[Node(3,false,false,-1.0,[Edge(2,1.0,false,0.36787944117144233,0.6321205588285577,1.0,ANode[Node(1,false,false,-1.0,[Edge(1,5.0,false,0.006737946999085467,0.9932620530009145,1.0,ANode[Node(#= circular reference =#),Node(2,true,false,-1.0,[Edge(#= circular reference =#)],false,false,false,false,false,false,-1,nothing,-1,-1,"")],true,true,-1,true,false,false),Edge(#= circular reference =#)],false,false,false,false,false,false,-1,nothing,-1,-1,""),Node(#= circular reference =#)],true,true,-1,true,true,false),Edge(#= circular reference =#)],false,false,false,false,false,false,-1,nothing,-1,-1,""),Node(4,true,false,-1.0,[Edge(#= circular reference =#)],false,false,false,false,false,false,-1,nothing,-1,-1,"")],true,true,-1,true,false,false)],1,ASCIIString[],[],0,Bool[],[],[],[Node(2,true,false,-1.0,[Edge(1,5.0,false,0.006737946999085467,0.9932620530009145,1.0,ANode[Node(1,false,false,-1.0,[Edge(#= circular reference =#),Edge(2,1.0,false,0.36787944117144233,0.6321205588285577,1.0,ANode[Node(#= circular reference =#),Node(3,false,false,-1.0,[Edge(#= circular reference =#),Edge(3,7.0,false,0.0009118819655545162,0.9990881180344455,1.0,ANode[Node(#= circular reference =#),Node(4,true,false,-1.0,[Edge(#= circular reference =#)],false,false,false,false,false,false,-1,nothing,-1,-1,"")],true,true,-1,true,false,false)],false,false,false,false,false,false,-1,nothing,-1,-1,"")],true,true,-1,true,true,false)],false,false,false,false,false,false,-1,nothing,-1,-1,""),Node(#= circular reference =#)],true,true,-1,true,false,false)],false,false,false,false,false,false,-1,nothing,-1,-1,""),Node(4,true,false,-1.0,[Edge(3,7.0,false,0.0009118819655545162,0.9990881180344455,1.0,ANode[Node(3,false,false,-1.0,[Edge(2,1.0,false,0.36787944117144233,0.6321205588285577,1.0,ANode[Node(1,false,false,-1.0,[Edge(1,5.0,false,0.006737946999085467,0.9932620530009145,1.0,ANode[Node(#= circular reference =#),Node(2,true,false,-1.0,[Edge(#= circular reference =#)],false,false,false,false,false,false,-1,nothing,-1,-1,"")],true,true,-1,true,false,false),Edge(#= circular reference =#)],false,false,false,false,false,false,-1,nothing,-1,-1,""),Node(#= circular reference =#)],true,true,-1,true,true,false),Edge(#= circular reference =#)],false,false,false,false,false,false,-1,nothing,-1,-1,""),Node(#= circular reference =#)],true,true,-1,true,false,false)],false,false,false,false,false,false,-1,nothing,-1,-1,"")],[],[],0,false,[],0.0,[],[])

julia> include("visualization/CF_to_LG.jl")
Warning: using LightGraphs.Edge in module Main conflicts with an existing identifier.
This is testing to see if the file works... apparently it does

julia> include("visualization/CF_to_LG.jl")
CF network created

julia> include("visualization/CF_to_LG.jl")
CF network created
87

julia>  include("visualization/CF_to_LG.jl")
CF network created
4-element Array{Node,1}:
 Node(1,false,false,-1.0,[Edge(1,5.0,false,0.006737946999085467,0.9932620530009145,1.0,ANode[Node(#= circular reference =#),Node(2,true,false,-1.0,[Edge(#= circular reference =#)],false,false,false,false,false,false,-1,nothing,-1,-1,"")],true,true,-1,true,false,false),Edge(2,1.0,false,0.36787944117144233,0.6321205588285577,1.0,ANode[Node(#= circular reference =#),Node(3,false,false,-1.0,[Edge(#= circular reference =#),Edge(3,7.0,false,0.0009118819655545162,0.9990881180344455,1.0,ANode[Node(#= circular reference =#),Node(4,true,false,-1.0,[Edge(#= circular reference =#)],false,false,false,false,false,false,-1,nothing,-1,-1,"")],true,true,-1,true,false,false)],false,false,false,false,false,false,-1,nothing,-1,-1,"")],true,true,-1,true,true,false)],false,false,false,false,false,false,-1,nothing,-1,-1,"")
 Node(2,true,false,-1.0,[Edge(1,5.0,false,0.006737946999085467,0.9932620530009145,1.0,ANode[Node(1,false,false,-1.0,[Edge(#= circular reference =#),Edge(2,1.0,false,0.36787944117144233,0.6321205588285577,1.0,ANode[Node(#= circular reference =#),Node(3,false,false,-1.0,[Edge(#= circular reference =#),Edge(3,7.0,false,0.0009118819655545162,0.9990881180344455,1.0,ANode[Node(#= circular reference =#),Node(4,true,false,-1.0,[Edge(#= circular reference =#)],false,false,false,false,false,false,-1,nothing,-1,-1,"")],true,true,-1,true,false,false)],false,false,false,false,false,false,-1,nothing,-1,-1,"")],true,true,-1,true,true,false)],false,false,false,false,false,false,-1,nothing,-1,-1,""),Node(#= circular reference =#)],true,true,-1,true,false,false)],false,false,false,false,false,false,-1,nothing,-1,-1,"")
 Node(3,false,false,-1.0,[Edge(2,1.0,false,0.36787944117144233,0.6321205588285577,1.0,ANode[Node(1,false,false,-1.0,[Edge(1,5.0,false,0.006737946999085467,0.9932620530009145,1.0,ANode[Node(#= circular reference =#),Node(2,true,false,-1.0,[Edge(#= circular reference =#)],false,false,false,false,false,false,-1,nothing,-1,-1,"")],true,true,-1,true,false,false),Edge(#= circular reference =#)],false,false,false,false,false,false,-1,nothing,-1,-1,""),Node(#= circular reference =#)],true,true,-1,true,true,false),Edge(3,7.0,false,0.0009118819655545162,0.9990881180344455,1.0,ANode[Node(#= circular reference =#),Node(4,true,false,-1.0,[Edge(#= circular reference =#)],false,false,false,false,false,false,-1,nothing,-1,-1,"")],true,true,-1,true,false,false)],false,false,false,false,false,false,-1,nothing,-1,-1,"")
 Node(4,true,false,-1.0,[Edge(3,7.0,false,0.0009118819655545162,0.9990881180344455,1.0,ANode[Node(3,false,false,-1.0,[Edge(2,1.0,false,0.36787944117144233,0.6321205588285577,1.0,ANode[Node(1,false,false,-1.0,[Edge(1,5.0,false,0.006737946999085467,0.9932620530009145,1.0,ANode[Node(#= circular reference =#),Node(2,true,false,-1.0,[Edge(#= circular reference =#)],false,false,false,false,false,false,-1,nothing,-1,-1,"")],true,true,-1,true,false,false),Edge(#= circular reference =#)],false,false,false,false,false,false,-1,nothing,-1,-1,""),Node(#= circular reference =#)],true,true,-1,true,true,false),Edge(#= circular reference =#)],false,false,false,false,false,false,-1,nothing,-1,-1,""),Node(#= circular reference =#)],true,true,-1,true,false,false)],false,false,false,false,false,false,-1,nothing,-1,-1,"")

julia>  include("visualization/CF_to_LG.jl")
CF network created
1
1
1
1

julia> 

julia> 

julia> 

julia> 

julia> 

julia> 

julia> 

julia> 

julia> 

julia> 

julia> 

julia> 

julia> 

julia> 

julia> 

julia> 

julia> 

julia> 

julia> 

julia> 

julia> 

julia> 

julia> 

julia> include("visualization/CF_to_LG.jl")
CF network created
Node(1,false,false,-1.0,[Edge(1,5.0,false,0.006737946999085467,0.9932620530009145,1.0,ANode[Node(#= circular reference =#),Node(2,true,false,-1.0,[Edge(#= circular reference =#)],false,false,false,false,false,false,-1,nothing,-1,-1,"")],true,true,-1,true,false,false),Edge(2,1.0,false,0.36787944117144233,0.6321205588285577,1.0,ANode[Node(#= circular reference =#),Node(3,false,false,-1.0,[Edge(#= circular reference =#),Edge(3,7.0,false,0.0009118819655545162,0.9990881180344455,1.0,ANode[Node(#= circular reference =#),Node(4,true,false,-1.0,[Edge(#= circular reference =#)],false,false,false,false,false,false,-1,nothing,-1,-1,"")],true,true,-1,true,false,false)],false,false,false,false,false,false,-1,nothing,-1,-1,"")],true,true,-1,true,true,false)],false,false,false,false,false,false,-1,nothing,-1,-1,"")
Node(2,true,false,-1.0,[Edge(1,5.0,false,0.006737946999085467,0.9932620530009145,1.0,ANode[Node(1,false,false,-1.0,[Edge(#= circular reference =#),Edge(2,1.0,false,0.36787944117144233,0.6321205588285577,1.0,ANode[Node(#= circular reference =#),Node(3,false,false,-1.0,[Edge(#= circular reference =#),Edge(3,7.0,false,0.0009118819655545162,0.9990881180344455,1.0,ANode[Node(#= circular reference =#),Node(4,true,false,-1.0,[Edge(#= circular reference =#)],false,false,false,false,false,false,-1,nothing,-1,-1,"")],true,true,-1,true,false,false)],false,false,false,false,false,false,-1,nothing,-1,-1,"")],true,true,-1,true,true,false)],false,false,false,false,false,false,-1,nothing,-1,-1,""),Node(#= circular reference =#)],true,true,-1,true,false,false)],false,false,false,false,false,false,-1,nothing,-1,-1,"")
Node(3,false,false,-1.0,[Edge(2,1.0,false,0.36787944117144233,0.6321205588285577,1.0,ANode[Node(1,false,false,-1.0,[Edge(1,5.0,false,0.006737946999085467,0.9932620530009145,1.0,ANode[Node(#= circular reference =#),Node(2,true,false,-1.0,[Edge(#= circular reference =#)],false,false,false,false,false,false,-1,nothing,-1,-1,"")],true,true,-1,true,false,false),Edge(#= circular reference =#)],false,false,false,false,false,false,-1,nothing,-1,-1,""),Node(#= circular reference =#)],true,true,-1,true,true,false),Edge(3,7.0,false,0.0009118819655545162,0.9990881180344455,1.0,ANode[Node(#= circular reference =#),Node(4,true,false,-1.0,[Edge(#= circular reference =#)],false,false,false,false,false,false,-1,nothing,-1,-1,"")],true,true,-1,true,false,false)],false,false,false,false,false,false,-1,nothing,-1,-1,"")
Node(4,true,false,-1.0,[Edge(3,7.0,false,0.0009118819655545162,0.9990881180344455,1.0,ANode[Node(3,false,false,-1.0,[Edge(2,1.0,false,0.36787944117144233,0.6321205588285577,1.0,ANode[Node(1,false,false,-1.0,[Edge(1,5.0,false,0.006737946999085467,0.9932620530009145,1.0,ANode[Node(#= circular reference =#),Node(2,true,false,-1.0,[Edge(#= circular reference =#)],false,false,false,false,false,false,-1,nothing,-1,-1,"")],true,true,-1,true,false,false),Edge(#= circular reference =#)],false,false,false,false,false,false,-1,nothing,-1,-1,""),Node(#= circular reference =#)],true,true,-1,true,true,false),Edge(#= circular reference =#)],false,false,false,false,false,false,-1,nothing,-1,-1,""),Node(#= circular reference =#)],true,true,-1,true,false,false)],false,false,false,false,false,false,-1,nothing,-1,-1,"")

julia> include("visualization/CF_to_LG.jl")
CF network created
1
2
3
4

julia> sng="Walking the "*"dog."
"Walking the dog."

julia> println(sng)
Walking the dog.

julia> include("visualization/CF_to_LG.jl")
CF network created
4

julia> include("visualization/CF_to_LG.jl")
CF network created
ERROR: `*` has no method matching *(::ASCIIString, ::Int64)
 in CF_to_Light_Graph at /Users/John_Spaw/Projects/CFnetworks/visualization/CF_to_LG.jl:28
 in include at /Applications/Julia-0.3.9.app/Contents/Resources/julia/lib/julia/sys.dylib
 in include_from_node1 at /Applications/Julia-0.3.9.app/Contents/Resources/julia/lib/julia/sys.dylib
while loading /Users/John_Spaw/Projects/CFnetworks/visualization/CF_to_LG.jl, in expression starting on line 37

julia> include("visualization/CF_to_LG.jl")
CF network created
The number of nodes in the network is 4

julia> net
HybridNetwork(2,4,3,[Node(1,false,false,-1.0,[Edge(1,5.0,false,0.006737946999085467,0.9932620530009145,1.0,ANode[Node(#= circular reference =#),Node(2,true,false,-1.0,[Edge(#= circular reference =#)],false,false,false,false,false,false,-1,nothing,-1,-1,"")],true,true,-1,true,false,false),Edge(2,1.0,false,0.36787944117144233,0.6321205588285577,1.0,ANode[Node(#= circular reference =#),Node(3,false,false,-1.0,[Edge(#= circular reference =#),Edge(3,7.0,false,0.0009118819655545162,0.9990881180344455,1.0,ANode[Node(#= circular reference =#),Node(4,true,false,-1.0,[Edge(#= circular reference =#)],false,false,false,false,false,false,-1,nothing,-1,-1,"")],true,true,-1,true,false,false)],false,false,false,false,false,false,-1,nothing,-1,-1,"")],true,true,-1,true,true,false)],false,false,false,false,false,false,-1,nothing,-1,-1,""),Node(2,true,false,-1.0,[Edge(1,5.0,false,0.006737946999085467,0.9932620530009145,1.0,ANode[Node(1,false,false,-1.0,[Edge(#= circular reference =#),Edge(2,1.0,false,0.36787944117144233,0.6321205588285577,1.0,ANode[Node(#= circular reference =#),Node(3,false,false,-1.0,[Edge(#= circular reference =#),Edge(3,7.0,false,0.0009118819655545162,0.9990881180344455,1.0,ANode[Node(#= circular reference =#),Node(4,true,false,-1.0,[Edge(#= circular reference =#)],false,false,false,false,false,false,-1,nothing,-1,-1,"")],true,true,-1,true,false,false)],false,false,false,false,false,false,-1,nothing,-1,-1,"")],true,true,-1,true,true,false)],false,false,false,false,false,false,-1,nothing,-1,-1,""),Node(#= circular reference =#)],true,true,-1,true,false,false)],false,false,false,false,false,false,-1,nothing,-1,-1,""),Node(3,false,false,-1.0,[Edge(2,1.0,false,0.36787944117144233,0.6321205588285577,1.0,ANode[Node(1,false,false,-1.0,[Edge(1,5.0,false,0.006737946999085467,0.9932620530009145,1.0,ANode[Node(#= circular reference =#),Node(2,true,false,-1.0,[Edge(#= circular reference =#)],false,false,false,false,false,false,-1,nothing,-1,-1,"")],true,true,-1,true,false,false),Edge(#= circular reference =#)],false,false,false,false,false,false,-1,nothing,-1,-1,""),Node(#= circular reference =#)],true,true,-1,true,true,false),Edge(3,7.0,false,0.0009118819655545162,0.9990881180344455,1.0,ANode[Node(#= circular reference =#),Node(4,true,false,-1.0,[Edge(#= circular reference =#)],false,false,false,false,false,false,-1,nothing,-1,-1,"")],true,true,-1,true,false,false)],false,false,false,false,false,false,-1,nothing,-1,-1,""),Node(4,true,false,-1.0,[Edge(3,7.0,false,0.0009118819655545162,0.9990881180344455,1.0,ANode[Node(3,false,false,-1.0,[Edge(2,1.0,false,0.36787944117144233,0.6321205588285577,1.0,ANode[Node(1,false,false,-1.0,[Edge(1,5.0,false,0.006737946999085467,0.9932620530009145,1.0,ANode[Node(#= circular reference =#),Node(2,true,false,-1.0,[Edge(#= circular reference =#)],false,false,false,false,false,false,-1,nothing,-1,-1,"")],true,true,-1,true,false,false),Edge(#= circular reference =#)],false,false,false,false,false,false,-1,nothing,-1,-1,""),Node(#= circular reference =#)],true,true,-1,true,true,false),Edge(#= circular reference =#)],false,false,false,false,false,false,-1,nothing,-1,-1,""),Node(#= circular reference =#)],true,true,-1,true,false,false)],false,false,false,false,false,false,-1,nothing,-1,-1,"")],[Edge(1,5.0,false,0.006737946999085467,0.9932620530009145,1.0,ANode[Node(1,false,false,-1.0,[Edge(#= circular reference =#),Edge(2,1.0,false,0.36787944117144233,0.6321205588285577,1.0,ANode[Node(#= circular reference =#),Node(3,false,false,-1.0,[Edge(#= circular reference =#),Edge(3,7.0,false,0.0009118819655545162,0.9990881180344455,1.0,ANode[Node(#= circular reference =#),Node(4,true,false,-1.0,[Edge(#= circular reference =#)],false,false,false,false,false,false,-1,nothing,-1,-1,"")],true,true,-1,true,false,false)],false,false,false,false,false,false,-1,nothing,-1,-1,"")],true,true,-1,true,true,false)],false,false,false,false,false,false,-1,nothing,-1,-1,""),Node(2,true,false,-1.0,[Edge(#= circular reference =#)],false,false,false,false,false,false,-1,nothing,-1,-1,"")],true,true,-1,true,false,false),Edge(2,1.0,false,0.36787944117144233,0.6321205588285577,1.0,ANode[Node(1,false,false,-1.0,[Edge(1,5.0,false,0.006737946999085467,0.9932620530009145,1.0,ANode[Node(#= circular reference =#),Node(2,true,false,-1.0,[Edge(#= circular reference =#)],false,false,false,false,false,false,-1,nothing,-1,-1,"")],true,true,-1,true,false,false),Edge(#= circular reference =#)],false,false,false,false,false,false,-1,nothing,-1,-1,""),Node(3,false,false,-1.0,[Edge(#= circular reference =#),Edge(3,7.0,false,0.0009118819655545162,0.9990881180344455,1.0,ANode[Node(#= circular reference =#),Node(4,true,false,-1.0,[Edge(#= circular reference =#)],false,false,false,false,false,false,-1,nothing,-1,-1,"")],true,true,-1,true,false,false)],false,false,false,false,false,false,-1,nothing,-1,-1,"")],true,true,-1,true,true,false),Edge(3,7.0,false,0.0009118819655545162,0.9990881180344455,1.0,ANode[Node(3,false,false,-1.0,[Edge(2,1.0,false,0.36787944117144233,0.6321205588285577,1.0,ANode[Node(1,false,false,-1.0,[Edge(1,5.0,false,0.006737946999085467,0.9932620530009145,1.0,ANode[Node(#= circular reference =#),Node(2,true,false,-1.0,[Edge(#= circular reference =#)],false,false,false,false,false,false,-1,nothing,-1,-1,"")],true,true,-1,true,false,false),Edge(#= circular reference =#)],false,false,false,false,false,false,-1,nothing,-1,-1,""),Node(#= circular reference =#)],true,true,-1,true,true,false),Edge(#= circular reference =#)],false,false,false,false,false,false,-1,nothing,-1,-1,""),Node(4,true,false,-1.0,[Edge(#= circular reference =#)],false,false,false,false,false,false,-1,nothing,-1,-1,"")],true,true,-1,true,false,false)],1,ASCIIString[],[],0,Bool[],[],[],[Node(2,true,false,-1.0,[Edge(1,5.0,false,0.006737946999085467,0.9932620530009145,1.0,ANode[Node(1,false,false,-1.0,[Edge(#= circular reference =#),Edge(2,1.0,false,0.36787944117144233,0.6321205588285577,1.0,ANode[Node(#= circular reference =#),Node(3,false,false,-1.0,[Edge(#= circular reference =#),Edge(3,7.0,false,0.0009118819655545162,0.9990881180344455,1.0,ANode[Node(#= circular reference =#),Node(4,true,false,-1.0,[Edge(#= circular reference =#)],false,false,false,false,false,false,-1,nothing,-1,-1,"")],true,true,-1,true,false,false)],false,false,false,false,false,false,-1,nothing,-1,-1,"")],true,true,-1,true,true,false)],false,false,false,false,false,false,-1,nothing,-1,-1,""),Node(#= circular reference =#)],true,true,-1,true,false,false)],false,false,false,false,false,false,-1,nothing,-1,-1,""),Node(4,true,false,-1.0,[Edge(3,7.0,false,0.0009118819655545162,0.9990881180344455,1.0,ANode[Node(3,false,false,-1.0,[Edge(2,1.0,false,0.36787944117144233,0.6321205588285577,1.0,ANode[Node(1,false,false,-1.0,[Edge(1,5.0,false,0.006737946999085467,0.9932620530009145,1.0,ANode[Node(#= circular reference =#),Node(2,true,false,-1.0,[Edge(#= circular reference =#)],false,false,false,false,false,false,-1,nothing,-1,-1,"")],true,true,-1,true,false,false),Edge(#= circular reference =#)],false,false,false,false,false,false,-1,nothing,-1,-1,""),Node(#= circular reference =#)],true,true,-1,true,true,false),Edge(#= circular reference =#)],false,false,false,false,false,false,-1,nothing,-1,-1,""),Node(#= circular reference =#)],true,true,-1,true,false,false)],false,false,false,false,false,false,-1,nothing,-1,-1,"")],[],[],0,false,[],0.0,[],[])

julia> include("visualization/CF_to_LG.jl")
CF network created
The number of nodes in the network is 4

julia> include("visualization/CF_to_LG.jl")
CF network created
The number of nodes in the network is 4

julia> println("CF network created")

CF network created

julia> println("CF network created")

CF network created

julia> include("visualization/CF_to_LG.jl")
Edges created
Nodes created
CF network created
The number of nodes in the network is 4

julia> include("visualization/CF_to_LG.jl")
Edges created
Nodes created
CF network created
The number of nodes in the network is 4
{4, 0} undirected graph

julia> include("visualization/CF_to_LG.jl")
Edges created
Nodes created
CF network created
The number of nodes in the network is 4
{4, 0} undirected graph
There is an edge between 1 and 2There is an edge between 1 and 3There is an edge between 3 and 4
julia> include("visualization/CF_to_LG.jl")
Edges created
Nodes created
CF network created
The number of nodes in the network is 4
{4, 0} undirected graph
There is an edge between 1 and 2
There is an edge between 1 and 3
There is an edge between 3 and 4

julia> include("visualization/CF_to_LG.jl")
Edges created
Nodes created
CF network created
The number of nodes in the network is 4
{4, 0} undirected graph
There is an edge between 1 and 2
Added an edge between 1 and 2There is an edge between 1 and 3
Added an edge between 1 and 3There is an edge between 3 and 4
Added an edge between 3 and 4
julia> include("visualization/CF_to_LG.jl")
Edges created
Nodes created
CF network created
The number of nodes in the network is 4
{4, 0} undirected graph
There is an edge between 1 and 2
Added an edge between 1 and 2
There is an edge between 1 and 3
Added an edge between 1 and 3
There is an edge between 3 and 4
Added an edge between 3 and 4

julia> include("visualization/CF_to_LG.jl")
Edges created
Nodes created
CF network created
The number of nodes in the network is 4
{4, 0} undirected graph
There is an edge between 1 and 2
Added an edge between 1 and 2 in the lgNet
 
There is an edge between 1 and 3
Added an edge between 1 and 3 in the lgNet
 
There is an edge between 3 and 4
Added an edge between 3 and 4 in the lgNet
 

julia> include("visualization/CF_to_LG.jl")
Edges created
Nodes created
CF network created
The number of nodes in the network is 4
{4, 0} undirected graph
 
There is an edge between 1 and 2
Added an edge between 1 and 2 in the lgNet
 
There is an edge between 1 and 3
Added an edge between 1 and 3 in the lgNet
 
There is an edge between 3 and 4
Added an edge between 3 and 4 in the lgNet
 

julia> include("visualization/CF_to_LG.jl")
Edges created
Nodes created
CF network created
The number of nodes in the network is 4
{4, 0} undirected graph
 
There is an edge between 1 and 2
Added an edge between 1 and 2 in the lgNet
 
There is an edge between 1 and 3
Added an edge between 1 and 3 in the lgNet
 
There is an edge between 3 and 4
Added an edge between 3 and 4 in the lgNet
 
{4, 3} undirected graph

julia> include("visualization/CF_to_LG.jl")
Edges created
Nodes created
CF network created
The number of nodes in the network is 4
{4, 0} undirected graph
 
There is an edge between 1 and 2
Added an edge between 1 and 2 in the lgNet
 
There is an edge between 1 and 3
Added an edge between 1 and 3 in the lgNet
 
There is an edge between 3 and 4
Added an edge between 3 and 4 in the lgNet
 
{4, 3} undirected graph

julia> 